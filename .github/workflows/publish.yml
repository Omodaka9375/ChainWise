name: Publish to NPM

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      publish_npm:
        description: 'Publish to NPM'
        required: true
        default: true
        type: boolean
      publish_beta:
        description: 'Publish as beta'
        required: true
        default: false
        type: boolean

jobs:
  verify:
    name: Verify Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Remove cache: 'npm' since no lock file exists

      - name: Install dependencies (if package.json exists)
        run: |
          if [ -f "package.json" ]; then
            npm install --only=dev
          else
            echo "No package.json found, skipping dependency installation"
          fi

      - name: Verify build exists
        run: |
          if [ ! -f "dist/chainwise.min.js" ]; then
            echo "‚ùå chainwise.min.js not found"
            exit 1
          fi
          echo "‚úÖ chainwise.min.js found"

      - name: Verify build integrity
        run: |
          # Basic file size check
          MIN_SIZE=10000  # 10KB minimum
          FILE_SIZE=$(stat -f%z dist/chainwise.min.js 2>/dev/null || stat -c%s dist/chainwise.min.js 2>/dev/null)
          
          if [ "$FILE_SIZE" -lt "$MIN_SIZE" ]; then
            echo "‚ùå chainwise.min.js is too small ($FILE_SIZE bytes)"
            exit 1
          fi
          
          # Check for basic content
          if ! grep -q "CryptoWallet" dist/chainwise.min.js; then
            echo "‚ùå chainwise.min.js doesn't contain CryptoWallet"
            exit 1
          fi
          
          echo "‚úÖ Build integrity check passed ($FILE_SIZE bytes)"

      - name: Test library loading
        run: |
          # Test that the file is valid JavaScript
          node -e "
            const fs = require('fs');
            const content = fs.readFileSync('dist/chainwise.min.js', 'utf8');
            if (content.includes('CryptoWallet') && content.includes('NETWORK_CONFIGS')) {
              console.log('‚úÖ Library structure validated');
            } else {
              console.error('‚ùå Required components not found');
              process.exit(1);
            }
          "

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: verify
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          # Remove cache: 'npm' since no lock file exists

      - name: Install publishing dependencies
        run: |
          # Only install minimal dependencies needed for publishing
          npm init -y 2>/dev/null || true

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup package.json for publishing
        run: |
          cat > package.json << 'EOF'
          {
            "name": "chainwise",
            "version": "4.2.0",
            "description": "Universal Multi-Blockchain HD Wallet Library for the Browser",
            "main": "dist/chainwise.min.js",
            "browser": "dist/chainwise.min.js",
            "files": [
              "dist/chainwise.min.js",
              "dist/chainwise.js",
              "README.md",
              "LICENSE"
            ],
            "scripts": {
              "test": "echo \"No tests specified\" && exit 0"
            },
            "repository": {
              "type": "git",
              "url": "git+https://github.com/${{ github.repository }}.git"
            },
            "keywords": [
              "blockchain",
              "wallet",
              "crypto",
              "bitcoin",
              "ethereum",
              "solana",
              "cardano",
              "polkadot",
              "hd-wallet",
              "bip32",
              "bip44",
              "multi-chain",
              "web3",
              "cryptography",
              "javascript",
              "browser"
            ],
            "author": "ChainWise Team",
            "license": "MIT",
            "bugs": {
              "url": "https://github.com/${{ github.repository }}/issues"
            },
            "homepage": "https://github.com/${{ github.repository }}#readme",
            "engines": {
              "node": ">=14.0.0"
            },
            "jsdelivr": "dist/chainwise.min.js",
            "unpkg": "dist/chainwise.min.js"
          }
          EOF

      - name: Version bump (workflow_dispatch only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from tag (release)
        if: github.event_name == 'release'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
          npm version $VERSION --no-git-tag-version

      - name: Verify package contents
        run: |
          echo "üì¶ Package contents:"
          npm pack --dry-run

      - name: Publish to NPM (Latest)
        if: github.event.inputs.publish_beta != 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (Beta)
        if: github.event.inputs.publish_beta == 'true'
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag (workflow_dispatch only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag "v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: ChainWise v${{ env.NEW_VERSION }}
          body: |
            ## ChainWise v${{ env.NEW_VERSION }}
            
            Universal Multi-Blockchain HD Wallet Library
            
            ### üì¶ Installation
            ```bash
            npm install chainwise@${{ env.NEW_VERSION }}
            ```
            
            ### üîó CDN Links
            ```html
            <!-- Production -->
            <script src="https://cdn.jsdelivr.net/npm/chainwise@${{ env.NEW_VERSION }}/chainwise.min.js"></script>
            
            <!-- Alternative -->
            <script src="https://unpkg.com/chainwise@${{ env.NEW_VERSION }}/chainwise.min.js"></script>
            ```
            
            ### üåê Supported Networks
            Bitcoin, Ethereum, Solana, Cardano, Polkadot, Kusama, Avalanche, Binance Smart Chain, Polygon, Cosmos, NEAR, Tron, Algorand, Stellar, Ripple, Litecoin, Filecoin, Nostr
            
            ### üöÄ Features
            - HD Wallet with BIP32/BIP44 support
            - Multi-curve cryptography (secp256k1, ed25519, sr25519)
            - Web Workers for performance
            - AES-256-GCM encryption
            - 17+ blockchain networks
            - Responsive cyberpunk & professional themes
            
            **Full documentation:** https://github.com/${{ github.repository }}
          files: |
            chainwise.min.js
          draft: false
          prerelease: ${{ github.event.inputs.publish_beta == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify success
        run: |
          echo "‚úÖ Successfully published ChainWise v${{ env.NEW_VERSION }} to NPM"
          echo "üì¶ NPM: https://www.npmjs.com/package/chainwise"
          echo "üîó CDN: https://cdn.jsdelivr.net/npm/chainwise@${{ env.NEW_VERSION }}/chainwise.min.js"